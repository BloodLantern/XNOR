cmake_minimum_required(VERSION 3.21)

project(CoreCSharpNative VERSION 0.3 LANGUAGES CXX)

set(SWIG_INTERFACE_DIR "${CMAKE_CURRENT_SOURCE_DIR}")
set(SWIG_INTERFACE "${SWIG_INTERFACE_DIR}/core.i")

set(CORE_PROJECT_DIR "${SWIG_INTERFACE_DIR}/..")
set(SOLUTION_DIR "${CORE_PROJECT_DIR}/..")
set(OUT_DIR "${SOLUTION_DIR}/x64/$(Configuration)")
set(OUT_DIR_DEBUG "${SOLUTION_DIR}/x64/Debug")
set(OUT_DIR_RELEASE "${SOLUTION_DIR}/x64/Release")

set(CORE_PROJECT_INCLUDE_DIR "${CORE_PROJECT_DIR}/include")
set(CORE_PROJECT_EXTERNAL_INCLUDE_DIR "${CORE_PROJECT_DIR}/externals/include")
set(CORE_PROJECT_SOURCE_DIR "${CORE_PROJECT_DIR}/src")

set(NET_PROJECT_NAME "CoreCSharp")
set(NET_PROJECT_DIR "${CORE_PROJECT_DIR}/../${NET_PROJECT_NAME}")
set(NET_PROJECT_SRC_DIR "${NET_PROJECT_DIR}/autogenerated")
set(NET_PROJECT_DLL_DIR "${NET_PROJECT_DIR}")

if (MSVC)
    set(SWIG_DIR "${SOLUTION_DIR}/SWIG/Lib")
    set(SWIG_EXECUTABLE "${SOLUTION_DIR}/SWIG/swig.exe")
endif (MSVC)

find_package(SWIG REQUIRED)
include(${SWIG_USE_FILE})

set(CMAKE_SWIG_FLAGS -std=c++23 -namespace Xnor.Core)

set(CMAKE_CXX_STANDARD 23)
set(CMAKE_CXX_STANDARD_REQUIRED True)

cmake_policy(SET CMP0122 NEW)

set_property(SOURCE "${SWIG_INTERFACE}" PROPERTY CPLUSPLUS ON)
set_property(SOURCE "${SWIG_INTERFACE}" PROPERTY INCLUDE_DIRECTORIES "${CORE_PROJECT_INCLUDE_DIR};${CORE_PROJECT_EXTERNAL_INCLUDE_DIR}")

swig_add_library(CoreCSharpNative
    TYPE SHARED
    LANGUAGE CSharp
    SOURCES ${SWIG_INTERFACE} additional_functions.cpp
    OUTPUT_DIR ${NET_PROJECT_SRC_DIR}
    OUTFILE_DIR ${CMAKE_BINARY_DIR}
)

set_target_properties(CoreCSharpNative
    PROPERTIES
    # These copy the shared library on Windows to .Net project directory
    RUNTIME_OUTPUT_DIRECTORY_RELEASE ${OUT_DIR_RELEASE}
    RUNTIME_OUTPUT_DIRECTORY_DEBUG ${OUT_DIR_DEBUG}
    
    # This copies the shared library on Linux to .Net project directory
    LIBRARY_OUTPUT_DIRECTORY ${OUT_DIR}

    # Set location of C++ headers
    INCLUDE_DIRECTORIES ${CORE_PROJECT_INCLUDE_DIR}
)

target_include_directories(
    CoreCSharpNative
    PUBLIC
    "${CORE_PROJECT_DIR}/include"
    "${CORE_PROJECT_DIR}/inline"
    "${CORE_PROJECT_DIR}/externals/include"
)

target_link_directories(CoreCSharpNative PUBLIC "${SOLUTION_DIR}/x64/")

target_link_libraries(CoreCSharpNative "Core.lib")

add_compile_definitions(MATH_DEFINE_FORMATTER SWIG_WRAP)
